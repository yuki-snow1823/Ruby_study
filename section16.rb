# 【重要】正規表現に関して
# 本に加えて参考：https://qiita.com/jnchito/items/893c887fbf19e17d3ff9
# 判定の連取に使える： https://rubular.com/


# ほぼ共通であるが。ただし、微妙に使える機能や挙動が異なったり、
# 実行環境に合わせたエスケープ文字を入れる必要があったりするので、その点は注意。

=begin
伊藤さんのqiita抜粋

そもそも：正規表現「文字列の集合を一行で表したもの」
パターンのこと。そしてそのパターンは、Regexpクラスのオブジェクト（ちなみにリージェックスかレジェックス）
/ / を使ってパターンを書く
伊藤さん曰く、「パターンを指定して、文字列を効率よく検索・置換するためのミニ言語」

先ほど入力してもらった \d は正規表現では特別な意味を持ちます。
こういった特別な文字を 「メタ文字」 と呼びます。
\d は「1個の半角数字（0123456789）」を意味するメタ文字です（文字の集合を表しているので、特に 「文字クラス」 と呼ばれます）。
普通の検索であれば \d は "\d" という文字列そのものを検索しますが、正規表現では \d は「1個の半角数字」を検索します。
正規表現を試すことのできるサイト：　http://rubular.com/

文字の個数を限定するときは {n,m} や {n} というメタ文字を使います（文字量を指定するので、特に 「量指定子」 と呼ばれます）。
{n,m} は「直前の文字が n 個以上、m 個以下」の意味です。
また、 {n} とすれば「ちょうど n 文字」の意味になります。
よって正規表現は以下のようになります。
\d{2,5}-\d{1,4}-\d{4}

範囲を指定できる！！！
\d{2,5}[-(]\これが一個のブロック

※一方、[-09] と入力すると、「0または9またはハイフン」にマッチします。
[-az] や [az-] のように、ハイフンが [ ] の最初、または最後に置かれると「ハイフン1文字」の意味に変わります。
なので [-az] や [az-] は「aまたはzまたはハイフンのいずれか1文字」の意味になります。

=end

#scanについて　p "foobar".scan(/../)               # => ["fo", "ob", "ar"] マッチした配列を返す

# =~ マッチするかどうかを調べるためのもの

text = <<-TEXT
名前：伊藤淳一
電話：03-1234-5678
住所：兵庫県西脇市板波町1-2-3
TEXT
p text.scan /\d\d-\d\d\d\d-\d\d\d\d/
# => ["03-1234-5678"]

# \s 空白文字を表す。

=begin
「～が1文字、または無し」を表現するためには ? というメタ文字を使います。（文字量を指定するので 量指定子 のひとつです）
正規表現にはちょうど「任意の1文字」を表す . というメタ文字（文字クラス）があります。
=end


s = "オブジェクト指向は難しい!なんて難しいんだ!"
puts s.gsub(/難しいんだ/, "簡単なんだ").gsub(/難しい/, "簡単だ")

# gsubは変換まで行う
