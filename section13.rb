# 配列とは、インデックスのついたオブジェクトの集まりのこと

a = Array.new(5,"あ")

# 同義
p a.slice(1..2)
p a[1..2]


# %i,%wで空白を消したり、シンボルで配列を作れる
# キーと値のペアからなる配列に対して、to_iを使うと配列内配列になる

# 挿入の場合は、指定した一の要素の「前」に挿入される
a[2] = "い"
p a


# インデックスを意識せず、「集合」の概念で配列を扱うこともできる

b = ["a","b","c"]
c = ["b","c","d"]

p (b & c) # &一つだけ

# 入れた後に最後から取り出すものをキュー。入れた後に入れたものから取り出すのをスタックと呼ぶ（データ構造）
# .shiftは先頭から、popは後ろから


# 行列の初期化を行う注意
a = Array.new(3) do
  [0,0,0]
end

p a 

# これを、 a = Array.new(3,[0,0,0])とすると、配列の要素が強制的に一個になる

# 練習問題

# 1
p d = (1..100).to_a

# 2
e = d.map{|i| i * 100 }
p e

d.map!{|i| i * 100 }
p d

# 3
f = d.reject{|i| i % 3 != 0 }
# 3の倍数以外を拒否
p f

# 4,5解けた。6の解説： 取り出す要素の先頭のインデックスと必要な要素の数を指定します。

# # 配列を作成する
# ary = (1..100).to_a
# result = Array.new
# 10.times do |i|
#   result << ary[i*10, 10]
# end
# 10から10個入れるのを１０回
# p result
